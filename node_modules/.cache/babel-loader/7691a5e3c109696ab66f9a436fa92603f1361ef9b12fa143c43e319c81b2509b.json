{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\text-editor\\\\src\\\\Components\\\\Textform.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [text, setText] = useState(\"Enter the text here\");\n  const handleUppercase = () => {\n    setText(text.toUpperCase());\n  };\n  const handleLowercase = () => {\n    setText(text.toLowerCase());\n  };\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exampleFormControlTextarea1\",\n          className: \"form-label\",\n          children: \"ENTER THE TEXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: handleChange,\n          className: \"form-control\",\n          id: \"exampleFormControlTextarea1\",\n          placeholder: \"Enter the text\",\n          style: {\n            height: \"120px\",\n            fontSize: \"16px\",\n            resize: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mx-1\",\n      onClick: handleUppercase,\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mx-1\",\n      onClick: handleLowercase,\n      children: \"Convert to Lowercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Text Analysis Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Words=\", text.split(\" \").length, \" and Text=\", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"/+MpnpKxnohQ0HP2Azva40o1rMs=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","text","setText","handleUppercase","toUpperCase","handleLowercase","toLowerCase","handleChange","event","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","onChange","id","placeholder","style","height","fontSize","resize","onClick","split","length","_c","$RefreshReg$"],"sources":["D:/React/text-editor/src/Components/Textform.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"Enter the text here\");\r\n\r\n  const handleUppercase = () => {\r\n    setText(text.toUpperCase());\r\n  };\r\n\r\n  const handleLowercase = () => {\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-5\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            ENTER THE TEXT\r\n          </label>\r\n          <textarea\r\n            value={text}\r\n            onChange={handleChange}\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            placeholder=\"Enter the text\"\r\n            style={{\r\n              height: \"120px\",\r\n              fontSize: \"16px\",\r\n              resize: \"none\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleUppercase}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-primary mx-1\" onClick={handleLowercase}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <div>\r\n        <h2>Text Analysis Results</h2>\r\n        <p>Words={text.split(\" \").length} and Text={text.length}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,qBAAqB,CAAC;EAEvD,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5BD,OAAO,CAACD,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BH,OAAO,CAACD,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAKZ,KAAK,CAACa;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBrB,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAN,QAAA,gBACnBhB,OAAA;UAAOuB,OAAO,EAAC,6BAA6B;UAACD,SAAS,EAAC,YAAY;UAAAN,QAAA,EAAC;QAEpE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrB,OAAA;UACEe,KAAK,EAAET,IAAK;UACZkB,QAAQ,EAAEZ,YAAa;UACvBU,SAAS,EAAC,cAAc;UACxBG,EAAE,EAAC,6BAA6B;UAChCC,WAAW,EAAC,gBAAgB;UAC5BC,KAAK,EAAE;YACLC,MAAM,EAAE,OAAO;YACfC,QAAQ,EAAE,MAAM;YAChBC,MAAM,EAAE;UACV;QAAE;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNrB,OAAA;MAAQsB,SAAS,EAAC,sBAAsB;MAACS,OAAO,EAAEvB,eAAgB;MAAAQ,QAAA,EAAC;IAEnE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MAAQsB,SAAS,EAAC,sBAAsB;MAACS,OAAO,EAAErB,eAAgB;MAAAM,QAAA,EAAC;IAEnE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BrB,OAAA;QAAAgB,QAAA,GAAG,QAAM,EAACV,IAAI,CAAC0B,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,YAAU,EAAC3B,IAAI,CAAC2B,MAAM;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA,eACN,CAAC;AAEP;AAAChB,EAAA,CAjDuBF,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}